{"version":3,"sources":["config.js","App.js","reportWebVitals.js","nft.js","navbar.js","index.js"],"names":["NFTCONTRACT","STAKINGCONTRACT","polygonscanapi","moralisapi","createAlchemyWeb3","account","contract","vaultcontract","web3","gasOptions","gasPrice","gasLimit","Web3Alc","sleep","ms","Promise","resolve","setTimeout","web3Modal","Web3Modal","network","theme","cacheProvider","providerOptions","App","state","balance","rawearn","this","setState","show","nftamount","outvalue","target","value","axios","get","then","outputa","data","console","log","config","headers","outputb","result","nftdata","connectwallet","delay","delayedLog","processArray","rwdArray","item","sum","reduce","a","b","formatsum","Number","toFixed","document","getElementById","textContent","connect","provider","Web3","request","method","eth","requestAccounts","accounts","Contract","ABI","VAULTABI","methods","tokensOfOwner","call","getstakednfts","balanceOf","getbalance","arraynft","Array","from","map","tokenid","filter","forEach","id","earningInfo","array","earned","toPrecision","split","earnedrwd","utils","fromWei","rewardx","numrwd","push","setApprovalForAll","send","rawnfts","getMaxPriorityFeePerGas","tip","getBlock","block","baseFee","baseFeePerGas","maxPriority","maxFee","claim","maxFeePerGas","maxPriorityFeePerGas","unstake","className","type","onClick","style","backgroundColor","fontWeight","color","fontFamily","textShadow","htmlFor","borderRadius","fontSize","boxShadow","paddingTop","border","background","paddingBottom","src","width","height","alt","scope","href","rel","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Button","Container","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","Collapse","Nav","Link","active","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.1958909f.chunk.js","sourcesContent":["import { createAlchemyWeb3 } from '@alch/alchemy-web3';\nexport const NFTCONTRACT = \"0xA690c89558a39709e1F0DdE0f8825a83d438fcE4\";\nexport const STAKINGCONTRACT = \"0x7f6059DdF112CBD103c7F2Fd2ed0F0adb2E2AE8c\";\nexport const polygonscanapi = \"https://api.polygonscan.com/api\";\nexport const moralisapi = \"https://deep-index.moralis.io/api/v2\";\nexport const nftpng = \"https://ipfs.io/ipfs/QmZnG7o3UTe35xq3ffJMtApKXnY2d2Ccxwjxny3HPvop1S/\";\nexport const Web3Alc = createAlchemyWeb3(\"https://polygon-mainnet.g.alchemy.com/v2/es1OESDzahjFzl7I2jMj9F24Ea3vMo3u\");\n\n\n\n// export const polygonscanapi = \"https://api.polygonscan.com/api\";","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport 'sf-font';\nimport axios from 'axios';\nimport ABI from './ABI.json';\nimport VAULTABI from './VAULTABI.json';\nimport { NFTCONTRACT, STAKINGCONTRACT, polygonscanapi, moralisapi } from './config';\nimport Web3Modal from \"web3modal\";\nimport Web3 from \"web3\";\nimport { createAlchemyWeb3 } from '@alch/alchemy-web3';\n\nvar account = null;\nvar contract = null;\nvar vaultcontract = null;\nvar web3 = null;\nconst gasOptions = { gasPrice: 150000000000, gasLimit: 500000 };\n\nconst Web3Alc = createAlchemyWeb3(\"https://eth-mainnet.g.alchemy.com/v2/W3CAcUSVv-z7zxqoiF3coq_6wUAXcsl8\");\n\nconst moralisapikey = \"JwcyI3kFcZIx9M9Psom0b0d2ahdb9VxmSs80MnYU43bbwX803Jufh0XzqYKbXzyg\";\nconst polygonscanapikey = \"JAR6HQQDTVZ3UQIHCUFHJ7MV2M5E6V2FFE\";\n\nconst providerOptions = {\n};\n\nfunction sleep(ms) { return new Promise((resolve) => setTimeout(resolve, ms)); }\n\nconst web3Modal = new Web3Modal({\n    network: \"mainnet\",\n    theme: \"dark\",\n    cacheProvider: false,\n    providerOptions\n});\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            balance: [],\n            rawearn: [],\n        };\n    }\n\n    handleModal() {\n        this.setState({ show: !this.state.show })\n    }\n\n    handleNFT(nftamount) {\n        this.setState({ outvalue: nftamount.target.value });\n    }\n\n    async componentDidMount() {\n\n        await axios.get((polygonscanapi + `?module=stats&action=tokensupply&contractaddress=${NFTCONTRACT}&apikey=${polygonscanapikey}`))\n            .then(outputa => {\n                this.setState({\n                    balance: outputa.data\n                })\n                console.log(outputa.data)\n            })\n        let config = { 'X-API-Key': moralisapikey, 'accept': 'application/json' };\n        await axios.get((moralisapi + `/nft/${NFTCONTRACT}/owners?chain=polygon&format=decimal`), { headers: config })\n            .then(outputb => {\n                const { result } = outputb.data\n                this.setState({\n                    nftdata: result\n                })\n                console.log(outputb.data)\n            })\n    }\n\n    render() {\n        async function connectwallet() {\n            var provider = await web3Modal.connect();\n            web3 = new Web3(provider);\n            await provider.request({ method: 'eth_requestAccounts' });\n            var accounts = await web3.eth.requestAccounts();\n            account = accounts[0];\n            document.getElementById('wallet-address').textContent = account;\n            contract = new web3.eth.Contract(ABI, NFTCONTRACT);\n            vaultcontract = new web3.eth.Contract(VAULTABI, STAKINGCONTRACT);\n            var getstakednfts = await vaultcontract.methods.tokensOfOwner(account).call();\n            document.getElementById('yournfts').textContent = getstakednfts;\n            var getbalance = Number(await vaultcontract.methods.balanceOf(account).call());\n            document.getElementById('stakedbalance').textContent = getbalance;\n            const arraynft = Array.from(getstakednfts.map(Number));\n            const tokenid = arraynft.filter(Number);\n            var rwdArray = [];\n            tokenid.forEach(async (id) => {\n                var rawearn = await vaultcontract.methods.earningInfo(account, [id]).call();\n                var array = Array.from(rawearn.map(Number));\n                console.log(array);\n                array.forEach(async (item) => {\n                    var earned = item.toPrecision(22).split('.')[0]\n                    var earnedrwd = Web3.utils.fromWei(earned);\n                    var rewardx = Number(earnedrwd).toFixed(2);\n                    var numrwd = Number(rewardx);\n                    console.log(numrwd);\n                    rwdArray.push(numrwd);\n                });\n            });\n            function delay() {\n                return new Promise(resolve => setTimeout(resolve, 300));\n            }\n            async function delayedLog(item) {\n                await delay();\n                var sum = item.reduce((a, b) => a + b, 0);\n                var formatsum = Number(sum).toFixed(2);\n                document.getElementById('earned').textContent = formatsum;\n            }\n            async function processArray(rwdArray) {\n                for (const item of rwdArray) {\n                    await delayedLog(item);\n                }\n            }\n            return processArray([rwdArray]);\n        }\n\n        async function enable() {\n            contract.methods.setApprovalForAll(STAKINGCONTRACT, true).send({ from: account, ...gasOptions });\n        }\n        async function rewardinfo() {\n            var rawnfts = await vaultcontract.methods.tokensOfOwner(account).call();\n            const arraynft = Array.from(rawnfts.map(Number));\n            const tokenid = arraynft.filter(Number);\n            var rwdArray = [];\n            tokenid.forEach(async (id) => {\n                var rawearn = await vaultcontract.methods.earningInfo(account, [id]).call();\n                var array = Array.from(rawearn.map(Number));\n                array.forEach(async (item) => {\n                    var earned = item.toPrecision(22).split('.')[0];\n                    var earnedrwd = Web3.utils.fromWei(earned);\n                    var rewardx = Number(earnedrwd).toFixed(2);\n                    var numrwd = Number(rewardx);\n                    rwdArray.push(numrwd)\n                    await sleep(100);\n                });\n            });\n            function delay() {\n                return new Promise(resolve => setTimeout(resolve, 300));\n            }\n            async function delayedLog(item) {\n                await delay();\n                var sum = item.reduce((a, b) => a + b, 0);\n                var formatsum = Number(sum).toFixed(2);\n                document.getElementById('earned').textContent = formatsum;\n            }\n            async function processArray(rwdArray) {\n                for (const item of rwdArray) {\n                    await delayedLog(item);\n                }\n            }\n            return processArray([rwdArray]);\n        }\n        async function claimit() {\n          var rawnfts = await vaultcontract.methods.tokensOfOwner(account).call();\n          const arraynft = Array.from(rawnfts.map(Number));\n          const tokenid = arraynft.filter(Number);\n          await Web3Alc.eth.getMaxPriorityFeePerGas().then((tip) => {\n            Web3Alc.eth.getBlock('pending').then((block) => {\n              var baseFee = Number(block.baseFeePerGas);\n              var maxPriority = Number(tip);\n              var maxFee = maxPriority + baseFee;\n              tokenid.forEach(async (id) => {\n                await vaultcontract.methods.claim([id])\n                  .send({\n                    from: account,\n                    maxFeePerGas: maxFee,\n                    maxPriorityFeePerGas: maxPriority\n                            })\n                    })\n                });\n            })\n        }\n        async function unstakeall() {\n          var rawnfts = await vaultcontract.methods.tokensOfOwner(account).call();\n          const arraynft = Array.from(rawnfts.map(Number));\n          const tokenid = arraynft.filter(Number);\n          await Web3Alc.eth.getMaxPriorityFeePerGas().then((tip) => {\n            Web3Alc.eth.getBlock('pending').then((block) => {\n              var baseFee = Number(block.baseFeePerGas);\n              var maxPriority = Number(tip);\n              var maxFee = maxPriority + baseFee;\n              tokenid.forEach(async (id) => {\n                await vaultcontract.methods.unstake([id])\n                  .send({\n                    from: account,\n                    maxFeePerGas: maxFee,\n                    maxPriorityFeePerGas: maxPriority\n                            })\n                    })\n                });\n            })\n        }\n        return (\n            <div className=\"container py-2 bg-black\">\n                <div className=\"App nftapp bg-black\">\n                    <div className=\"container\">\n                        <input id=\"connectbtn\" type=\"button\" className=\"connectbutton\" onClick={connectwallet} style={{ backgroundColor: \"#26A7DF\", className: \"nav-item d-flex align-content-center flex-wrap\" }} value=\"Connect Your Wallet\" />\n                    </div>\n                    <div className='container, bg-black'>\n                        <div className='col, py-4'>\n                            <div className=''>\n                                <div>\n                                    <div className=\"row\">\n                                        <div>\n                                            <h1 className=\"pt-3\" style={{ fontWeight: \"30\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}>MetaBadge Staking Platform</h1>\n                                        </div>\n                                        <h6 style={{ fontWeight: \"300\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}>Your Wallet Address</h6>\n                                        <div className=\"pb-1\" id='wallet-address' style={{\n                                            color: \"#4ac0e7\",\n                                            fontWeight: \"600\",\n                                            textShadow: \"1px 1px 1px black\",\n                                        }}>\n                                            <label type=\"button\" onClick={connectwallet} htmlFor=\"floatingInput\">Please Connect Your Wallet</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col bg-black'>\n                        <div className='nftstaker border-0 bg-black'>\n                            <div style={{ fontFamily: \"Avenir LT Std\" }} >\n                                <h2 className=\"pt-2\" style={{ fontFamily: \"Avenir LT Std\", borderRadius: '14px', fontWeight: \"400\", color: \"#ffffff\", fontSize: \"25px\" }} id=\"Vault\">MetaBadge Staking Vault </h2>\n                                <h6 style={{ fontWeight: \"300\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}>First time staking?</h6>\n                                <button className=\"btn\" onClick={enable}\n                                style={{ backgroundColor: \"#26A7DF\", boxShadow: \"1px 1px 5px #4ac0e7\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}\n                                >Authorize Your Wallet</button>\n                                <div className=\"row mt-2 px-3 pt-1\">\n                                    <div className=\"col-sm-4 col-center-block\">\n                                        <div className=\"stakingrewards\" style={{ borderRadius: \"25px\", boxShadow: \"1px 1px 15px #4ac0e7\" }}>\n                                            <h5 style={{ color: \"#FFFFFF\", fontSize: \"15px\", fontWeight: '300', paddingTop: 15 }}>Vault Activity</h5>\n                                            <table className='table mb-5 px-3 table-dark wrap-nft'>\n                                                <tbody>\n                                                    <tr>\n                                                        <td style={{ fontSize: \"0px\", border: \"transparent\", background: 'transparent', paddingTop: 1, paddingBottom: 1 }}>\n                                                            <span style={{ backgroundColor: \"#ffffff00\", fontSize: \"0px\", color: \"#D53790\", fontWeight: \"0\", textShadow: \"1px 1px 2px #000000\" }} id='yournfts'></span>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td style={{ fontSize: \"19px\", border: \"transparent\", background: 'transparent', paddingTop: 1, paddingBottom: 1 }}>Total Staked NFTs:<br></br>\n                                                            <span style={{ backgroundColor: \"#ffffff00\", fontSize: \"21px\", color: \"#D53790\", fontWeight: \"500\", textShadow: \"1px 1px 2px #000000\" }} id='stakedbalance'>Total Staked</span>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td style={{ fontSize: \"19px\", background: 'transparent' }}>\n                                                            <button onClick={unstakeall}\n                                                            style={{ backgroundColor: \"#D53790\", boxShadow: \"1px 1px 5px #4ac0e7\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\"  }}className='btn mb-4'\n                                                            >Unstake All</button>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                    <img className=\"img-fluid col-sm-3 col-center-block\" src=\"metabadges.png\" width=\"\" height=\"\" alt=\"Responsive\" />\n                                    <div className=\"col-sm-4 col-center-block\">\n                                        <div className='stakingrewards' style={{ borderRadius: \"25px\", boxShadow: \"1px 1px 15px #4ac0e7\", fontFamily: \"Avenir LT Std\" }}>\n                                            <h5 style={{ color: \"#FFFFFF\", fontSize: \"15px\", fontWeight: '300', paddingTop: 15 }}>Rewards Activity</h5>\n                                            <div style={{ border: \"transparent\", background: \"transparent\" }} >Refresh OSIS Rewards\n                                                <button style={{ border: \"none\", background: \"transparent\" }} >\n                                                    <img src=\"refresh.png\" width=\"\" height=\"15\" background=\"transparent\" border=\"transparent\" alt=\"\" onClick={rewardinfo} />\n                                                </button>\n                                            </div>\n                                            <div id='earned' style={{ color: \"#D53790\", fontSize: '21px', fontWeight: '500', textShadow: \"1px 1px 2px #000000\" }}><p >Earned Tokens</p>\n                                            </div>\n                                            <div>\n                                                <button onClick={claimit}\n                                                style={{ backgroundColor: \"#D53790\", boxShadow: \"1px 1px 5px #4ac0e7\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }} className=\"btn mb-4 mt-1\"\n                                                >Claim Rewards</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row px-4 pt-2\">\n                                    <div className=\"header\">\n                                        <div className='col bg-black'></div>\n                                        <div style={{ fontSize: '25px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Pool Active Rewards</div>\n                                        <h1>\n                                        </h1>\n                                        <table style={{ boxShadow: \"1px 1px 15px #4ac0e7\" }} className='table px-3 table-bordered table-dark' >\n                                            <thead className='thead-light'>\n                                                <tr>\n                                                    <th scope=\"col\">Collection</th>\n                                                    <th scope=\"col\">Rewards Per Day</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr>\n                                                    <td>Standard MetaBadge</td>\n                                                    <td className=\"amount\" data-test-id=\"rewards-summary-ads\">\n                                                        <span className=\"amount\">1</span>&nbsp;<span className=\"currency\">OSIS</span>\n                                                    </td>\n                                                </tr>\n                                                <tr className='stakegoldeffect'>\n                                                    <td>Rare / Super Rare MetaBadge</td>\n                                                    <td className=\"amount \" data-test-id=\"rewards-summary-ac\">\n                                                        <span className=\"amount\">2</span>&nbsp;<span className=\"currency\">OSIS</span>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                        <a href=\"/OSIS_Rewards.pdf\" target=\"_blank\" rel=\"noreferrer\"\n                                            className=\"'mb-3 mt-3 bg-black'\"\n                                            style={{ backgroundColor: \"#000000\", boxShadow: \"0px 0px 0px #4ac0e7\", fontWeight: \"300\", fontSize: '20px', color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}>\n                                            OSIS Rewards List\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col mt-3 bg-black' id=\"NFT\">\n                        <div className='col bg-black'>\n                            <h1 className=' mb-3 mt-5 bg-black'>MetaBadge Portal</h1>\n                            <div className='col mt-3 ml-3 bg-black'>\n                                <img src=\"polygon.png\" width={'15%'} height=\"\" alt=\"\" ></img>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './App.css';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport 'sf-font';\nimport axios from 'axios';\nimport ABI from './ABI.json';\nimport VAULTABI from './VAULTABI.json';\nimport { NFTCONTRACT, STAKINGCONTRACT, polygonscanapi, moralisapi } from './config';\nimport Web3Modal from \"web3modal\";\nimport Web3 from \"web3\";\nimport { createAlchemyWeb3 } from '@alch/alchemy-web3';\n\nvar account = null;\nvar contract = null;\nvar vaultcontract = null;\nvar web3 = null;\nconst gasOptions = { gasPrice: 150000000000, gasLimit: 500000 };\n\nconst Web3Alc = createAlchemyWeb3(\"https://eth-mainnet.g.alchemy.com/v2/W3CAcUSVv-z7zxqoiF3coq_6wUAXcsl8\");\n\nconst moralisapikey = \"JwcyI3kFcZIx9M9Psom0b0d2ahdb9VxmSs80MnYU43bbwX803Jufh0XzqYKbXzyg\";\nconst polygonscanapikey = \"JAR6HQQDTVZ3UQIHCUFHJ7MV2M5E6V2FFE\";\n\nconst providerOptions = {\n};\n\nfunction sleep(ms) { return new Promise((resolve) => setTimeout(resolve, ms)); }\n\nconst web3Modal = new Web3Modal({\n    network: \"mainnet\",\n    theme: \"dark\",\n    cacheProvider: false,\n    providerOptions\n});\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            balance: [],\n            rawearn: [],\n        };\n    }\n\n    handleModal() {\n        this.setState({ show: !this.state.show })\n    }\n\n    handleNFT(nftamount) {\n        this.setState({ outvalue: nftamount.target.value });\n    }\n\n    async componentDidMount() {\n\n        await axios.get((polygonscanapi + `?module=stats&action=tokensupply&contractaddress=${NFTCONTRACT}&apikey=${polygonscanapikey}`))\n            .then(outputa => {\n                this.setState({\n                    balance: outputa.data\n                })\n                console.log(outputa.data)\n            })\n        let config = { 'X-API-Key': moralisapikey, 'accept': 'application/json' };\n        await axios.get((moralisapi + `/nft/${NFTCONTRACT}/owners?chain=polygon&format=decimal`), { headers: config })\n            .then(outputb => {\n                const { result } = outputb.data\n                this.setState({\n                    nftdata: result\n                })\n                console.log(outputb.data)\n            })\n    }\n\n    render() {\n        async function connectwallet() {\n            var provider = await web3Modal.connect();\n            web3 = new Web3(provider);\n            await provider.request({ method: 'eth_requestAccounts' });\n            var accounts = await web3.eth.requestAccounts();\n            account = accounts[0];\n            document.getElementById('wallet-address').textContent = account;\n            contract = new web3.eth.Contract(ABI, NFTCONTRACT);\n            vaultcontract = new web3.eth.Contract(VAULTABI, STAKINGCONTRACT);\n            var getstakednfts = await vaultcontract.methods.tokensOfOwner(account).call();\n            document.getElementById('yournfts').textContent = getstakednfts;\n            var getbalance = Number(await vaultcontract.methods.balanceOf(account).call());\n            document.getElementById('stakedbalance').textContent = getbalance;\n            const arraynft = Array.from(getstakednfts.map(Number));\n            const tokenid = arraynft.filter(Number);\n            var rwdArray = [];\n            tokenid.forEach(async (id) => {\n                var rawearn = await vaultcontract.methods.earningInfo(account, [id]).call();\n                var array = Array.from(rawearn.map(Number));\n                console.log(array);\n                array.forEach(async (item) => {\n                    var earned = item.toPrecision(22).split('.')[0]\n                    var earnedrwd = Web3.utils.fromWei(earned);\n                    var rewardx = Number(earnedrwd).toFixed(2);\n                    var numrwd = Number(rewardx);\n                    console.log(numrwd);\n                    rwdArray.push(numrwd);\n                });\n            });\n            function delay() {\n                return new Promise(resolve => setTimeout(resolve, 300));\n            }\n            async function delayedLog(item) {\n                await delay();\n                var sum = item.reduce((a, b) => a + b, 0);\n                var formatsum = Number(sum).toFixed(2);\n                document.getElementById('earned').textContent = formatsum;\n            }\n            async function processArray(rwdArray) {\n                for (const item of rwdArray) {\n                    await delayedLog(item);\n                }\n            }\n            return processArray([rwdArray]);\n        }\n\n        async function enable() {\n            contract.methods.setApprovalForAll(STAKINGCONTRACT, true).send({ from: account, ...gasOptions });\n        }\n        async function rewardinfo() {\n            var rawnfts = await vaultcontract.methods.tokensOfOwner(account).call();\n            const arraynft = Array.from(rawnfts.map(Number));\n            const tokenid = arraynft.filter(Number);\n            var rwdArray = [];\n            tokenid.forEach(async (id) => {\n                var rawearn = await vaultcontract.methods.earningInfo(account, [id]).call();\n                var array = Array.from(rawearn.map(Number));\n                array.forEach(async (item) => {\n                    var earned = item.toPrecision(22).split('.')[0];\n                    var earnedrwd = Web3.utils.fromWei(earned);\n                    var rewardx = Number(earnedrwd).toFixed(2);\n                    var numrwd = Number(rewardx);\n                    rwdArray.push(numrwd)\n                });\n            });\n            function delay() {\n                return new Promise(resolve => setTimeout(resolve, 300));\n            }\n            async function delayedLog(item) {\n                await delay();\n                var sum = item.reduce((a, b) => a + b, 0);\n                var formatsum = Number(sum).toFixed(2);\n                document.getElementById('earned').textContent = formatsum;\n            }\n            async function processArray(rwdArray) {\n                for (const item of rwdArray) {\n                    await delayedLog(item);\n                }\n            }\n            return processArray([rwdArray]);\n        }\n        async function claimit() {\n          var rawnfts = await vaultcontract.methods.tokensOfOwner(account).call();\n          const arraynft = Array.from(rawnfts.map(Number));\n          const tokenid = arraynft.filter(Number);\n          await Web3Alc.eth.getMaxPriorityFeePerGas().then((tip) => {\n            Web3Alc.eth.getBlock('pending').then((block) => {\n              var baseFee = Number(block.baseFeePerGas);\n              var maxPriority = Number(tip);\n              var maxFee = maxPriority + baseFee;\n              tokenid.forEach(async (id) => {\n                await vaultcontract.methods.claim([id])\n                  .send({\n                    from: account,\n                    maxFeePerGas: maxFee,\n                    maxPriorityFeePerGas: maxPriority\n                            })\n                    })\n                });\n            })\n        }\n        async function unstakeall() {\n          var rawnfts = await vaultcontract.methods.tokensOfOwner(account).call();\n          const arraynft = Array.from(rawnfts.map(Number));\n          const tokenid = arraynft.filter(Number);\n          await Web3Alc.eth.getMaxPriorityFeePerGas().then((tip) => {\n            Web3Alc.eth.getBlock('pending').then((block) => {\n              var baseFee = Number(block.baseFeePerGas);\n              var maxPriority = Number(tip);\n              var maxFee = maxPriority + baseFee;\n              tokenid.forEach(async (id) => {\n                await vaultcontract.methods.unstake([id])\n                  .send({\n                    from: account,\n                    maxFeePerGas: maxFee,\n                    maxPriorityFeePerGas: maxPriority\n                            })\n                    })\n                });\n            })\n        }\n        return (\n            <div className=\"container py-2 bg-black\">\n                <div className=\"App nftapp bg-black\">\n                    <div className=\"container\">\n                        <input id=\"connectbtn\" type=\"button\" className=\"connectbutton\" onClick={connectwallet} style={{ backgroundColor: \"#26A7DF\", className: \"nav-item d-flex align-content-center flex-wrap\" }} value=\"Connect Your Wallet\" />\n                    </div>\n                    <div className='container, bg-black'>\n                        <div className='col, py-4'>\n                            <div className=''>\n                                <div>\n                                    <div className=\"row\">\n                                        <div>\n                                            <h1 className=\"pt-3\" style={{ fontWeight: \"30\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}>MetaBadge Staking Platform</h1>\n                                        </div>\n                                        <h6 style={{ fontWeight: \"300\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}>Your Wallet Address</h6>\n                                        <div className=\"pb-1\" id='wallet-address' style={{\n                                            color: \"#4ac0e7\",\n                                            fontWeight: \"600\",\n                                            textShadow: \"1px 1px 1px black\",\n                                        }}>\n                                            <label type=\"button\" onClick={connectwallet} htmlFor=\"floatingInput\">Please Connect Your Wallet</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col bg-black'>\n                        <div className='nftstaker border-0 bg-black'>\n                            <div style={{ fontFamily: \"Avenir LT Std\" }} >\n                                <h2 className=\"pt-2\" style={{ fontFamily: \"Avenir LT Std\", borderRadius: '14px', fontWeight: \"400\", color: \"#ffffff\", fontSize: \"25px\" }} id=\"Vault\">MetaBadge Staking Vault </h2>\n                                <h6 style={{ fontWeight: \"300\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}>First time staking?</h6>\n                                <Button className=\"btn\" onClick={enable}\n                                style={{ backgroundColor: \"#26A7DF\", boxShadow: \"1px 1px 5px #4ac0e7\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}\n                                >Authorize Your Wallet</Button>\n                                <div className=\"row mt-2 px-3 pt-1\">\n                                    <div className=\"col-sm-4 col-center-block\">\n                                        <div className=\"stakingrewards\" style={{ borderRadius: \"25px\", boxShadow: \"1px 1px 15px #4ac0e7\" }}>\n                                            <h5 style={{ color: \"#FFFFFF\", fontSize: \"15px\", fontWeight: '300', paddingTop: 15 }}>Vault Activity</h5>\n                                            <table className='table mb-5 px-3 table-dark wrap-nft'>\n                                                <tbody>\n                                                    <tr>\n                                                        <td style={{ fontSize: \"0px\", border: \"transparent\", background: 'transparent', paddingTop: 1, paddingBottom: 1 }}>\n                                                            <span style={{ backgroundColor: \"#ffffff00\", fontSize: \"0px\", color: \"#D53790\", fontWeight: \"0\", textShadow: \"1px 1px 2px #000000\" }} id='yournfts'></span>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td style={{ fontSize: \"19px\", border: \"transparent\", background: 'transparent', paddingTop: 1, paddingBottom: 1 }}>Total Staked NFTs:<br></br>\n                                                            <span style={{ backgroundColor: \"#ffffff00\", fontSize: \"21px\", color: \"#D53790\", fontWeight: \"500\", textShadow: \"1px 1px 2px #000000\" }} id='stakedbalance'>Total Staked</span>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td style={{ fontSize: \"19px\", background: 'transparent' }}>\n                                                            <Button onClick={unstakeall}\n                                                            style={{ backgroundColor: \"#D53790\", boxShadow: \"1px 1px 5px #4ac0e7\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\"  }}className='mb-4'\n                                                            >Unstake All</Button>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                    <img className=\"img-fluid col-sm-3 col-center-block\" src=\"metabadges.png\" width=\"\" height=\"\" alt=\"Responsive\" />\n                                    <div className=\"col-sm-4 col-center-block\">\n                                        <div className='stakingrewards' style={{ borderRadius: \"25px\", boxShadow: \"1px 1px 15px #4ac0e7\", fontFamily: \"Avenir LT Std\" }}>\n                                            <h5 style={{ color: \"#FFFFFF\", fontSize: \"15px\", fontWeight: '300', paddingTop: 15 }}>Rewards Activity</h5>\n                                            <div style={{ border: \"transparent\", background: \"transparent\" }} >Refresh OSIS Rewards\n                                                <button style={{ border: \"none\", background: \"transparent\" }} >\n                                                    <img src=\"refresh.png\" width=\"\" height=\"15\" background=\"transparent\" border=\"transparent\" alt=\"\" onClick={rewardinfo} />\n                                                </button>\n                                            </div>\n                                            <div id='earned' style={{ color: \"#D53790\", fontSize: '21px', fontWeight: '500', textShadow: \"1px 1px 2px #000000\" }}><p >Earned Tokens</p>\n                                            </div>\n                                            <div>\n                                                <button onClick={claimit}\n                                                style={{ backgroundColor: \"#D53790\", boxShadow: \"1px 1px 5px #4ac0e7\", color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }} className=\"btn mb-4 mt-1\"\n                                                >Claim Rewards</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row px-4 pt-2\">\n                                    <div className=\"header\">\n                                        <div className='col bg-black'></div>\n                                        <div style={{ fontSize: '25px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Pool Active Rewards</div>\n                                        <h1>\n                                        </h1>\n                                        <table style={{ boxShadow: \"1px 1px 15px #4ac0e7\" }} className='table px-3 table-bordered table-dark' >\n                                            <thead className='thead-light'>\n                                                <tr>\n                                                    <th scope=\"col\">Collection</th>\n                                                    <th scope=\"col\">Rewards Per Day</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr>\n                                                    <td>Standard MetaBadge</td>\n                                                    <td className=\"amount\" data-test-id=\"rewards-summary-ads\">\n                                                        <span className=\"amount\">1</span>&nbsp;<span className=\"currency\">OSIS</span>\n                                                    </td>\n                                                </tr>\n                                                <tr className='stakegoldeffect'>\n                                                    <td>Rare / Super Rare MetaBadge</td>\n                                                    <td className=\"amount \" data-test-id=\"rewards-summary-ac\">\n                                                        <span className=\"amount\">2</span>&nbsp;<span className=\"currency\">OSIS</span>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                        <a href=\"/OSIS_Rewards.pdf\" target=\"_blank\" rel=\"noreferrer\"\n                                            className=\"'mb-3 mt-3 bg-black'\"\n                                            style={{ backgroundColor: \"#000000\", boxShadow: \"0px 0px 0px #4ac0e7\", fontWeight: \"300\", fontSize: '20px', color: \"#ffffff\", fontFamily: \"Avenir LT Std\" }}>\n                                            OSIS Rewards List\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col mt-3 bg-black' id=\"NFT\">\n                        <div className='col bg-black'>\n                            <h1 className=' mb-3 mt-5 bg-black'>MetaBadge Portal</h1>\n                            <div className='col mt-3 ml-3 bg-black'>\n                                <img src=\"polygon.png\" width={'15%'} height=\"\" alt=\"\" ></img>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default App;","import React from \"react\";\nimport \"./App.css\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport Container from 'react-bootstrap/Container';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default function App() {\n  return (\n    <Container>\n    <Navbar collapseOnSelect expand=\"sm\" bg=\"black\" variant=\"dark\">\n      <Navbar.Brand href=\".\">\n      <img src=\"apotheosis.png\" width=\"\" height=\"38\" alt=\"\"></img>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"ms-auto navbarfont navbar-header\">\n          <Nav.Link active href=\".\">DASHBOARD</Nav.Link>\n          <Nav.Link active href=\"#Vault\">VAULT</Nav.Link>\n          <Nav.Link active href=\"#NFTs\">NFTs</Nav.Link>\n          <Nav.Link active href=\"https://osis.world\" target=\"_blank\" rel=\"noreferrer\">OSIS.WORLD</Nav.Link>\n          <Nav.Link active href=\"https://osis.world/login\" target=\"_blank\" rel=\"noreferrer\">GET OSIS</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Routes, Route } from \"react-router-dom\";\nimport Nft from './nft';\nimport Navbar from './navbar';\n\n<Routes>\n<Route path=\"/nft\" element={<Nft />} />\n</Routes>\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \n  <React.StrictMode>\n    <Navbar />\n    <App />\n    <Nft />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}